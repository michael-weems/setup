#!/usr/bin/env bash

if [ -z "$XDG_CONFIG_HOME" ]; then
    echo "no xdg config home, defaulting to: ~/.config"
    XDG_CONFIG_HOME=$HOME/.config
fi

if [ -z "$DEV_ENV" ]; then
	echo "error: env var DEV_ENV needs to be present"
	echo "please temporarily set (eg. 'DEV_ENV=\$(pwd)' ): normally set in ~/.bashrc"
	exit 1
fi

source ./.bashlib

usage() {
	echo "$DEV_ENV/dev-env"
	echo ""
	echo "Usage:"
	echo "Overwrite your .dotfiles, config files, utility scripts, and more on this computer with what is in $HOME/projects/setup/"
	echo ""
	echo "Flags:"
	_lib_usage
}
if [[ "$usage" == "true" ]]; then
	usage
	exit 0
fi

log "----------- dev-env -----------"

log "copy config files to runtime locations"

copy $DEV_ENV/home/.profile $HOME/.profile
copy $DEV_ENV/home/.bashrc $HOME/.bashrc
copy $DEV_ENV/home/.bash_profile $HOME/.bash_profile
copy $DEV_ENV/home/.bash_aliases $HOME/.bash_aliases
copy $DEV_ENV/home/.bash_logout $HOME/.bash_logout
copy $DEV_ENV/home/.tmux-sessionizer $HOME/.tmux-sessionizer
copy $DEV_ENV/.bashlib $HOME/.bashlib
copy $DEV_ENV/home/.config/tmux/.tmux.conf $HOME/.tmux.conf # TMUX is also supposed to find the conf under $XDG_CONFIG_HOME/tmux, so why can't it?

source $HOME/.profile
source $HOME/.bashrc
source $HOME/.bash_profile
source $HOME/.bash_aliases
source $HOME/.bash_logout

copy_dir $DEV_ENV/home/.config $XDG_CONFIG_HOME
copy_dir $DEV_ENV/home/.local $HOME/.local

copy $DEV_ENV/tmux-sessionizer/tmux-sessionizer $HOME/.local/scripts/tmux-sessionizer 
copy $DEV_ENV/dev-env $HOME/.local/scripts/dev-env
