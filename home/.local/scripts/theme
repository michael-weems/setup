#!/usr/bin/env bash

source $HOME/.bashlib

silent="false"
preselected=""
base="$HOME"
for ((i=0; i<argc; i++)); do
	if   [[ "-s" == "${argv[$i]}" ]] || [[ "--silent" == "${argv[$i]}" ]]; then
		silent="true"
	elif [[ "-t" == "${argv[$i]}" ]] || [[ "--theme" == "${argv[$i]}" ]]; then
		i=$((i + 1))
		preselected="${argv[$i]}"
	elif [[ "-b" == "${argv[$i]}" ]] || [[ "--base" == "${argv[$i]}" ]]; then
		i=$((i + 1))
		base="${argv[$i]}"
	fi
done

if [[ -z "$preselected" ]]; then
	theme=$(ls $base/.local/themes | fzf)
else
	theme=$(ls $base/.local/themes | fzf -q $preselected --bind one:accept)
fi

if [[ -z "$theme" ]]; then
	echo "error: could not determine theme to apply - none matched your input"
	exit 1
fi

line_count=$(echo "$theme" | wc -l)
if [[ "$line_count" != "1" ]]; then
	echo "error: could not determine theme to apply: $theme"
	exit 1
fi

fallback="$base/.local/themes/_fallback"
f="$base/.local/themes/$theme"
t="$base"

# NOTE: waybar
if [[ -f "$f/waybar.css" ]]; then
	copy "$f/waybar.css" "$t/.config/waybar/theme.css"
else
	copy "$fallback/waybar.css" "$t/.config/waybar/theme.css"
fi

# NOTE: ghostty
if [[ -f "$f/ghostty" ]]; then
	copy "$f/ghostty" "$t/.config/ghostty/theme"
else
	copy "$fallback/ghostty" "$t/.config/ghostty/theme"
fi

# NOTE: hyprland
if [[ -f "$f/hyprland.conf" ]]; then
	copy "$f/hyprland.conf" "$t/.config/hypr/theme.conf"
else
	copy "$fallback/hyprland.conf" "$t/.config/hypr/theme.conf"
fi

# TODO:
# NOTE: rofi
if [[ -f "$f/rofi.rasi" ]]; then
	copy "$f/rofi.rasi" "$t/.local/share/rofi/themes/custom-theme.rasi"
else
	copy "$fallback/rofi.rasi" "$t/.local/share/rofi/themes/custom-theme.rasi"
fi

# TODO:
# NOTE: dunst

# TODO:
# NOTE: neovim

# TODO:
# NOTE: fzf

# NOTE: hyprpaper
if [[ "$silent" == "true" ]]; then
	wallpaper --prep --query $theme --base $base
else
	wallpaper --query $theme
fi
