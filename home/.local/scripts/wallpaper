#!/usr/bin/env bash

source $HOME/.bashlib

query=""
state="false"
reapply="false"
for ((i=0; i<argc; i++)); do
	if   [[ "-s" == "${argv[$i]}" ]] || [[ "--state" == "${argv[$i]}" ]]; then
		state="true"
	elif [[ "-q" == "${argv[$i]}" ]] || [[ "--query" == "${argv[$i]}" ]]; then
		i=$((i + 1))
		query="${argv[$i]}"
	elif [[ "-r" == "${argv[$i]}" ]] || [[ "--reapply" == "${argv[$i]}" ]]; then
		reapply="true"
	fi
done

if [[ "$reapply" == "true" ]]; then
	if [ ! -f $HOME/.local/state/theme/wallpaper ]; then
		# sane-default
		echo "$DEV_ENV/wallpapers/arch-sherbet.png" > $HOME/.local/state/theme/wallpaper
	fi

	wp=$(cat $HOME/.local/state/theme/wallpaper)
elif [[ -z "$query" ]]; then
        wp=$(find $DEV_ENV/wallpapers -mindepth 1 -maxdepth 1 -type f | fzf --preview 'chafa -f symbols {}' --preview-window=right,70%)
else
        wp=$(find $DEV_ENV/wallpapers -mindepth 1 -maxdepth 1 -type f | fzf --preview 'chafa -f symbols {}' --preview-window=right,70% -q $query --bind one:accept)
fi

if [[ -z "$wp" ]]; then
	echo "error: could not determine wallpaper to apply - none matched your input"
exit 1
fi

line_count=$(echo "$wp" | wc -l)
if [[ "$line_count" != "1" ]]; then
	echo "error: could not determine wallpaper to apply: $wp"
	exit 1
fi
echo "using wallpaper: $wp"

# prep the wallpaper for hyprland config to apply
if [ ! -d $HOME/.local/state/theme ]; then
	mkdir -p $HOME/.local/state/theme 
fi
echo "$wp" > $HOME/.local/state/theme/wallpaper

if [[ "$state" == "false" ]]; then
	# actually set the wallpaper
	hyprctl hyprpaper preload "$wp"
	hyprctl hyprpaper wallpaper "HDMI-A-1,${wp}"
fi

